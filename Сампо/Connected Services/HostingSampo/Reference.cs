//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Сампо.HostingSampo {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseVM", Namespace="http://schemas.datacontract.org/2004/07/ForOrganizators.Models")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Сампо.HostingSampo.Sampo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Сампо.HostingSampo.Partner))]
    public partial class BaseVM : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Sampo", Namespace="http://schemas.datacontract.org/2004/07/ForOrganizators.Models")]
    [System.SerializableAttribute()]
    public partial class Sampo : Сампо.HostingSampo.BaseVM {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EntitlingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Сампо.HostingSampo.Partner[] FollowersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Сампо.HostingSampo.Partner[] LidersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrganizatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RulesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Currency {
            get {
                return this.CurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyField, value) != true)) {
                    this.CurrencyField = value;
                    this.RaisePropertyChanged("Currency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Entitling {
            get {
                return this.EntitlingField;
            }
            set {
                if ((object.ReferenceEquals(this.EntitlingField, value) != true)) {
                    this.EntitlingField = value;
                    this.RaisePropertyChanged("Entitling");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Сампо.HostingSampo.Partner[] Followers {
            get {
                return this.FollowersField;
            }
            set {
                if ((object.ReferenceEquals(this.FollowersField, value) != true)) {
                    this.FollowersField = value;
                    this.RaisePropertyChanged("Followers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Сампо.HostingSampo.Partner[] Liders {
            get {
                return this.LidersField;
            }
            set {
                if ((object.ReferenceEquals(this.LidersField, value) != true)) {
                    this.LidersField = value;
                    this.RaisePropertyChanged("Liders");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Organizator {
            get {
                return this.OrganizatorField;
            }
            set {
                if ((this.OrganizatorField.Equals(value) != true)) {
                    this.OrganizatorField = value;
                    this.RaisePropertyChanged("Organizator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Rules {
            get {
                return this.RulesField;
            }
            set {
                if ((object.ReferenceEquals(this.RulesField, value) != true)) {
                    this.RulesField = value;
                    this.RaisePropertyChanged("Rules");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Partner", Namespace="http://schemas.datacontract.org/2004/07/ForOrganizators.Models")]
    [System.SerializableAttribute()]
    public partial class Partner : Сампо.HostingSampo.BaseVM {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Сампо.HostingSampo.Gender GenderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDshaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SurnameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Сампо.HostingSampo.Gender Gender {
            get {
                return this.GenderField;
            }
            set {
                if ((this.GenderField.Equals(value) != true)) {
                    this.GenderField = value;
                    this.RaisePropertyChanged("Gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IDsha {
            get {
                return this.IDshaField;
            }
            set {
                if ((this.IDshaField.Equals(value) != true)) {
                    this.IDshaField = value;
                    this.RaisePropertyChanged("IDsha");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((this.PhoneField.Equals(value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Surname {
            get {
                return this.SurnameField;
            }
            set {
                if ((object.ReferenceEquals(this.SurnameField, value) != true)) {
                    this.SurnameField = value;
                    this.RaisePropertyChanged("Surname");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Gender", Namespace="http://schemas.datacontract.org/2004/07/ForOrganizators.Models.%D0%9F%D0%B5%D1%80" +
        "%D0%B5%D1%87%D0%B8%D1%81%D0%BB%D0%B5%D0%BD%D0%B8%D1%8F")]
    public enum Gender : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Male = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Female = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="HostingSampo.IForOrganizators")]
    public interface IForOrganizators {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IForOrganizators/AuthorizationWithLogin", ReplyAction="http://tempuri.org/IForOrganizators/AuthorizationWithLoginResponse")]
        Сампо.HostingSampo.AuthorizationWithLoginResponse AuthorizationWithLogin(Сампо.HostingSampo.AuthorizationWithLoginRequest request);
        
        // CODEGEN: Идет формирование контракта на сообщение, так как операция может иметь много возвращаемых значений.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IForOrganizators/AuthorizationWithLogin", ReplyAction="http://tempuri.org/IForOrganizators/AuthorizationWithLoginResponse")]
        System.Threading.Tasks.Task<Сампо.HostingSampo.AuthorizationWithLoginResponse> AuthorizationWithLoginAsync(Сампо.HostingSampo.AuthorizationWithLoginRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IForOrganizators/AuthorizationWithIDsha", ReplyAction="http://tempuri.org/IForOrganizators/AuthorizationWithIDshaResponse")]
        Сампо.HostingSampo.AuthorizationWithIDshaResponse AuthorizationWithIDsha(Сампо.HostingSampo.AuthorizationWithIDshaRequest request);
        
        // CODEGEN: Идет формирование контракта на сообщение, так как операция может иметь много возвращаемых значений.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IForOrganizators/AuthorizationWithIDsha", ReplyAction="http://tempuri.org/IForOrganizators/AuthorizationWithIDshaResponse")]
        System.Threading.Tasks.Task<Сампо.HostingSampo.AuthorizationWithIDshaResponse> AuthorizationWithIDshaAsync(Сампо.HostingSampo.AuthorizationWithIDshaRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IForOrganizators/GetPartners", ReplyAction="http://tempuri.org/IForOrganizators/GetPartnersResponse")]
        Сампо.HostingSampo.Partner[] GetPartners(string firstname, string secondname, string patronymic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IForOrganizators/GetPartners", ReplyAction="http://tempuri.org/IForOrganizators/GetPartnersResponse")]
        System.Threading.Tasks.Task<Сампо.HostingSampo.Partner[]> GetPartnersAsync(string firstname, string secondname, string patronymic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IForOrganizators/GetSampoList", ReplyAction="http://tempuri.org/IForOrganizators/GetSampoListResponse")]
        Сампо.HostingSampo.Sampo[] GetSampoList(string city);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IForOrganizators/GetSampoList", ReplyAction="http://tempuri.org/IForOrganizators/GetSampoListResponse")]
        System.Threading.Tasks.Task<Сампо.HostingSampo.Sampo[]> GetSampoListAsync(string city);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IForOrganizators/GetSampo", ReplyAction="http://tempuri.org/IForOrganizators/GetSampoResponse")]
        Сампо.HostingSampo.Sampo GetSampo(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IForOrganizators/GetSampo", ReplyAction="http://tempuri.org/IForOrganizators/GetSampoResponse")]
        System.Threading.Tasks.Task<Сампо.HostingSampo.Sampo> GetSampoAsync(int id);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AuthorizationWithLogin", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class AuthorizationWithLoginRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string login;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string password;
        
        public AuthorizationWithLoginRequest() {
        }
        
        public AuthorizationWithLoginRequest(string login, string password) {
            this.login = login;
            this.password = password;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AuthorizationWithLoginResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class AuthorizationWithLoginResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool AuthorizationWithLoginResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public Сампо.HostingSampo.Partner partner;
        
        public AuthorizationWithLoginResponse() {
        }
        
        public AuthorizationWithLoginResponse(bool AuthorizationWithLoginResult, Сампо.HostingSampo.Partner partner) {
            this.AuthorizationWithLoginResult = AuthorizationWithLoginResult;
            this.partner = partner;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AuthorizationWithIDsha", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class AuthorizationWithIDshaRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int IDsha;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string password;
        
        public AuthorizationWithIDshaRequest() {
        }
        
        public AuthorizationWithIDshaRequest(int IDsha, string password) {
            this.IDsha = IDsha;
            this.password = password;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AuthorizationWithIDshaResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class AuthorizationWithIDshaResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool AuthorizationWithIDshaResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public Сампо.HostingSampo.Partner partner;
        
        public AuthorizationWithIDshaResponse() {
        }
        
        public AuthorizationWithIDshaResponse(bool AuthorizationWithIDshaResult, Сампо.HostingSampo.Partner partner) {
            this.AuthorizationWithIDshaResult = AuthorizationWithIDshaResult;
            this.partner = partner;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IForOrganizatorsChannel : Сампо.HostingSampo.IForOrganizators, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ForOrganizatorsClient : System.ServiceModel.ClientBase<Сампо.HostingSampo.IForOrganizators>, Сампо.HostingSampo.IForOrganizators {
        
        public ForOrganizatorsClient() {
        }
        
        public ForOrganizatorsClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ForOrganizatorsClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ForOrganizatorsClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ForOrganizatorsClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Сампо.HostingSampo.AuthorizationWithLoginResponse Сампо.HostingSampo.IForOrganizators.AuthorizationWithLogin(Сампо.HostingSampo.AuthorizationWithLoginRequest request) {
            return base.Channel.AuthorizationWithLogin(request);
        }
        
        public bool AuthorizationWithLogin(string login, string password, out Сампо.HostingSampo.Partner partner) {
            Сампо.HostingSampo.AuthorizationWithLoginRequest inValue = new Сампо.HostingSampo.AuthorizationWithLoginRequest();
            inValue.login = login;
            inValue.password = password;
            Сампо.HostingSampo.AuthorizationWithLoginResponse retVal = ((Сампо.HostingSampo.IForOrganizators)(this)).AuthorizationWithLogin(inValue);
            partner = retVal.partner;
            return retVal.AuthorizationWithLoginResult;
        }
        
        public System.Threading.Tasks.Task<Сампо.HostingSampo.AuthorizationWithLoginResponse> AuthorizationWithLoginAsync(Сампо.HostingSampo.AuthorizationWithLoginRequest request) {
            return base.Channel.AuthorizationWithLoginAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Сампо.HostingSampo.AuthorizationWithIDshaResponse Сампо.HostingSampo.IForOrganizators.AuthorizationWithIDsha(Сампо.HostingSampo.AuthorizationWithIDshaRequest request) {
            return base.Channel.AuthorizationWithIDsha(request);
        }
        
        public bool AuthorizationWithIDsha(int IDsha, string password, out Сампо.HostingSampo.Partner partner) {
            Сампо.HostingSampo.AuthorizationWithIDshaRequest inValue = new Сампо.HostingSampo.AuthorizationWithIDshaRequest();
            inValue.IDsha = IDsha;
            inValue.password = password;
            Сампо.HostingSampo.AuthorizationWithIDshaResponse retVal = ((Сампо.HostingSampo.IForOrganizators)(this)).AuthorizationWithIDsha(inValue);
            partner = retVal.partner;
            return retVal.AuthorizationWithIDshaResult;
        }
        
        public System.Threading.Tasks.Task<Сампо.HostingSampo.AuthorizationWithIDshaResponse> AuthorizationWithIDshaAsync(Сампо.HostingSampo.AuthorizationWithIDshaRequest request) {
            return base.Channel.AuthorizationWithIDshaAsync(request);
        }
        
        public Сампо.HostingSampo.Partner[] GetPartners(string firstname, string secondname, string patronymic) {
            return base.Channel.GetPartners(firstname, secondname, patronymic);
        }
        
        public System.Threading.Tasks.Task<Сампо.HostingSampo.Partner[]> GetPartnersAsync(string firstname, string secondname, string patronymic) {
            return base.Channel.GetPartnersAsync(firstname, secondname, patronymic);
        }
        
        public Сампо.HostingSampo.Sampo[] GetSampoList(string city) {
            return base.Channel.GetSampoList(city);
        }
        
        public System.Threading.Tasks.Task<Сампо.HostingSampo.Sampo[]> GetSampoListAsync(string city) {
            return base.Channel.GetSampoListAsync(city);
        }
        
        public Сампо.HostingSampo.Sampo GetSampo(int id) {
            return base.Channel.GetSampo(id);
        }
        
        public System.Threading.Tasks.Task<Сампо.HostingSampo.Sampo> GetSampoAsync(int id) {
            return base.Channel.GetSampoAsync(id);
        }
    }
}
